# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
env:
  REPO: aliguillen/api_proyecto_final
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo api_proyecto_final

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      - name: Login to Dockerhub Registry
        uses: docker/login-action@v1
        with:
            username: ${{ secrets.REGISTRY_USERNAME }}
            password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build and push image
        env:
          CONTAINER_IMAGE: ${{env.REPO}}:${{github.sha}}
          CONTAINER_IMAGE_LATEST: "${{ env.REPO }}:latest"
          network: my-net  

        run: |
          docker build -t  $CONTAINER_IMAGE -t $CONTAINER_IMAGE_LATEST .  
          docker push $CONTAINER_IMAGE
          docker push $CONTAINER_IMAGE_LATEST
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #php-unit
      - uses: php-actions/composer@v5
      - name: PHPUnit Tests
      
      - uses: php-actions/phpunit@v2
        env:
          TEST_NAME: aliguillen
        with:
          bootstrap: vendor/autoload.php
          configuration: test/phpunit.xml
          args: --coverage-text
